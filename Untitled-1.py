import numpy as np

def game_core_v3(number: int = 1) -> int:
    """
    Args:
        number (int, optional): Загаданное число. Defaults to 1.

    Returns:
        int: Число попыток
    """
    # Ваш код начинается здесь
    count = 0                           #Задаем начальное значение счетчика попыток
    # Получение случайного натурального числа в диапазоне 1 - 100
    predict = np.random.randint(1, 101)
    def interval(pred: int,a:int=1,b:int=100,cnt:int=0) -> int:
      '''Рекурсивная функция сужения интервала для загаданного числа и подсчет количества попыток'''
      global count                       # для видимости переменно, объявленной в родительской функции, объявляем переменную глобальной
      if((b-a)<2):                       # проверка условия базового случая, увеличение значения счетчика
        count = cnt+2
      else:
        cnt += 2                        # увеличение значения счетчика
        m = int((b-a)/2)                # получение середины интервала
        if(pred<=(a+m)):                # изменение границ интервала
          b -= m
        else:
          a += m
        interval(pred,a,b,cnt)          # вызов рекурсивной функции с новыми границами интервала и новым значением счетчика
      return count                      # возвращение количесва попыток
    count = interval(predict,1,100,0)   # поучение количесва попыток вызовом рекурсивной функции
    return count              # возвращение результата

print(game_core_v3())
